/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/extended/js/custom/modals/two-factor-authentication.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/extended/js/custom/modals/two-factor-authentication.js ***!
  \*********************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTModalTwoFactorAuthentication = function () {\n  // Private variables\n  var modal;\n  var modalObject;\n  var optionsWrapper;\n  var optionsSelectButton;\n  var smsWrapper;\n  var smsForm;\n  var smsSubmitButton;\n  var smsCancelButton;\n  var smsValidator;\n  var appsWrapper;\n  var appsForm;\n  var appsSubmitButton;\n  var appsCancelButton;\n  var appsValidator; // Private functions\n\n  var handleOptionsForm = function handleOptionsForm() {\n    // Handle options selection\n    optionsSelectButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n      optionsWrapper.classList.add('d-none');\n\n      if (option.value == 'sms') {\n        smsWrapper.classList.remove('d-none');\n      } else {\n        appsWrapper.classList.remove('d-none');\n      }\n    });\n  };\n\n  var showOptionsForm = function showOptionsForm() {\n    optionsWrapper.classList.remove('d-none');\n    smsWrapper.classList.add('d-none');\n    appsWrapper.classList.add('d-none');\n  };\n\n  var handleSMSForm = function handleSMSForm() {\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    smsValidator = FormValidation.formValidation(smsForm, {\n      fields: {\n        'mobile': {\n          validators: {\n            notEmpty: {\n              message: 'Mobile no is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }); // Handle apps submition\n\n    smsSubmitButton.addEventListener('click', function (e) {\n      e.preventDefault(); // Validate form before submit\n\n      if (smsValidator) {\n        smsValidator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            // Show loading indication\n            smsSubmitButton.setAttribute('data-kt-indicator', 'on'); // Disable button to avoid multiple click\n\n            smsSubmitButton.disabled = true; // Simulate ajax process\n\n            setTimeout(function () {\n              // Remove loading indication\n              smsSubmitButton.removeAttribute('data-kt-indicator'); // Enable button\n\n              smsSubmitButton.disabled = false; // Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\n              Swal.fire({\n                text: \"Mobile number has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  modalObject.hide();\n                  showOptionsForm();\n                }\n              }); //smsForm.submit(); // Submit form\n            }, 2000);\n          } else {\n            // Show error message.\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    }); // Handle sms cancelation\n\n    smsCancelButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n      optionsWrapper.classList.remove('d-none');\n      smsWrapper.classList.add('d-none');\n    });\n  };\n\n  var handleAppsForm = function handleAppsForm() {\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    appsValidator = FormValidation.formValidation(appsForm, {\n      fields: {\n        'code': {\n          validators: {\n            notEmpty: {\n              message: 'Code is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }); // Handle apps submition\n\n    appsSubmitButton.addEventListener('click', function (e) {\n      e.preventDefault(); // Validate form before submit\n\n      if (appsValidator) {\n        appsValidator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            appsSubmitButton.setAttribute('data-kt-indicator', 'on'); // Disable button to avoid multiple click\n\n            appsSubmitButton.disabled = true;\n            setTimeout(function () {\n              appsSubmitButton.removeAttribute('data-kt-indicator'); // Enable button\n\n              appsSubmitButton.disabled = false; // Show success message.\n\n              Swal.fire({\n                text: \"Code has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  modalObject.hide();\n                  showOptionsForm();\n                }\n              }); //appsForm.submit(); // Submit form\n            }, 2000);\n          } else {\n            // Show error message.\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    }); // Handle apps cancelation\n\n    appsCancelButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n      optionsWrapper.classList.remove('d-none');\n      appsWrapper.classList.add('d-none');\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      // Elements\n      modal = document.querySelector('#kt_modal_two_factor_authentication');\n\n      if (!modal) {\n        return;\n      }\n\n      modalObject = new bootstrap.Modal(modal);\n      optionsWrapper = modal.querySelector('[data-kt-element=\"options\"]');\n      optionsSelectButton = modal.querySelector('[data-kt-element=\"options-select\"]');\n      smsWrapper = modal.querySelector('[data-kt-element=\"sms\"]');\n      smsForm = modal.querySelector('[data-kt-element=\"sms-form\"]');\n      smsSubmitButton = modal.querySelector('[data-kt-element=\"sms-submit\"]');\n      smsCancelButton = modal.querySelector('[data-kt-element=\"sms-cancel\"]');\n      appsWrapper = modal.querySelector('[data-kt-element=\"apps\"]');\n      appsForm = modal.querySelector('[data-kt-element=\"apps-form\"]');\n      appsSubmitButton = modal.querySelector('[data-kt-element=\"apps-submit\"]');\n      appsCancelButton = modal.querySelector('[data-kt-element=\"apps-cancel\"]'); // Handle forms\n\n      handleOptionsForm();\n      handleSMSForm();\n      handleAppsForm();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTModalTwoFactorAuthentication.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/extended/js/custom/modals/two-factor-authentication.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/extended/js/custom/modals/two-factor-authentication.js"]();
/******/ 	
/******/ })()
;